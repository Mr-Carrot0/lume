export const snapshot = {};

snapshot[`lightningcss plugin (only transform) 1`] = `
{
  formats: [
    {
      engines: 0,
      ext: ".page.toml",
      isPage: true,
      loader: [AsyncFunction: toml],
    },
    {
      engines: 1,
      ext: ".page.ts",
      isPage: true,
      loader: [AsyncFunction: module],
    },
    {
      engines: 1,
      ext: ".page.js",
      isPage: true,
      loader: [AsyncFunction: module],
    },
    {
      engines: 0,
      ext: ".page.jsonc",
      isPage: true,
      loader: [AsyncFunction: json],
    },
    {
      engines: 0,
      ext: ".page.json",
      isPage: true,
      loader: [AsyncFunction: json],
    },
    {
      dataLoader: [AsyncFunction: json],
      engines: 0,
      ext: ".json",
      loader: [AsyncFunction: json],
    },
    {
      dataLoader: [AsyncFunction: json],
      engines: 0,
      ext: ".jsonc",
      loader: [AsyncFunction: json],
    },
    {
      engines: 1,
      ext: ".md",
      isPage: true,
      loader: [AsyncFunction: text],
    },
    {
      engines: 1,
      ext: ".markdown",
      isPage: true,
      loader: [AsyncFunction: text],
    },
    {
      dataLoader: [AsyncFunction: module],
      engines: 1,
      ext: ".js",
      loader: [AsyncFunction: module],
    },
    {
      dataLoader: [AsyncFunction: module],
      engines: 1,
      ext: ".ts",
      loader: [AsyncFunction: module],
    },
    {
      engines: 1,
      ext: ".vento",
      isPage: true,
      loader: [AsyncFunction: text],
    },
    {
      engines: 1,
      ext: ".vto",
      isPage: true,
      loader: [AsyncFunction: text],
    },
    {
      dataLoader: [AsyncFunction: toml],
      engines: 0,
      ext: ".toml",
      loader: [AsyncFunction: toml],
    },
    {
      dataLoader: [AsyncFunction: yaml],
      engines: 0,
      ext: ".yaml",
      isPage: true,
      loader: [AsyncFunction: yaml],
    },
    {
      dataLoader: [AsyncFunction: yaml],
      engines: 0,
      ext: ".yml",
      isPage: true,
      loader: [AsyncFunction: yaml],
    },
    {
      ext: ".css",
    },
  ],
  src: [
    "/",
    "/_includes",
    "/_includes/variables.css",
    "/index.css",
    "/text.css",
  ],
}
`;

snapshot[`lightningcss plugin (only transform) 2`] = `[]`;

snapshot[`lightningcss plugin (only transform) 3`] = `
[
  {
    content: '@import "variables.css";@import "./text.css";',
    data: {
      basename: "index",
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      url: "/index.css",
    },
    src: {
      ext: ".css",
      path: "/index",
      remote: undefined,
    },
  },
  {
    content: '@import "npm:modern-normalize@2.0.0";.text{font-family:var(--font-family)}.text p{color:var(--color);box-shadow:0 0 .5em var(--background);backface-visibility:hidden}',
    data: {
      basename: "text",
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      url: "/text.css",
    },
    src: {
      ext: ".css",
      path: "/text",
      remote: undefined,
    },
  },
]
`;

snapshot[`lightningcss plugin (bundle mode) 1`] = `
{
  formats: [
    {
      engines: 0,
      ext: ".page.toml",
      isPage: true,
      loader: [AsyncFunction: toml],
    },
    {
      engines: 1,
      ext: ".page.ts",
      isPage: true,
      loader: [AsyncFunction: module],
    },
    {
      engines: 1,
      ext: ".page.js",
      isPage: true,
      loader: [AsyncFunction: module],
    },
    {
      engines: 0,
      ext: ".page.jsonc",
      isPage: true,
      loader: [AsyncFunction: json],
    },
    {
      engines: 0,
      ext: ".page.json",
      isPage: true,
      loader: [AsyncFunction: json],
    },
    {
      dataLoader: [AsyncFunction: json],
      engines: 0,
      ext: ".json",
      loader: [AsyncFunction: json],
    },
    {
      dataLoader: [AsyncFunction: json],
      engines: 0,
      ext: ".jsonc",
      loader: [AsyncFunction: json],
    },
    {
      engines: 1,
      ext: ".md",
      isPage: true,
      loader: [AsyncFunction: text],
    },
    {
      engines: 1,
      ext: ".markdown",
      isPage: true,
      loader: [AsyncFunction: text],
    },
    {
      dataLoader: [AsyncFunction: module],
      engines: 1,
      ext: ".js",
      loader: [AsyncFunction: module],
    },
    {
      dataLoader: [AsyncFunction: module],
      engines: 1,
      ext: ".ts",
      loader: [AsyncFunction: module],
    },
    {
      engines: 1,
      ext: ".vento",
      isPage: true,
      loader: [AsyncFunction: text],
    },
    {
      engines: 1,
      ext: ".vto",
      isPage: true,
      loader: [AsyncFunction: text],
    },
    {
      dataLoader: [AsyncFunction: toml],
      engines: 0,
      ext: ".toml",
      loader: [AsyncFunction: toml],
    },
    {
      dataLoader: [AsyncFunction: yaml],
      engines: 0,
      ext: ".yaml",
      isPage: true,
      loader: [AsyncFunction: yaml],
    },
    {
      dataLoader: [AsyncFunction: yaml],
      engines: 0,
      ext: ".yml",
      isPage: true,
      loader: [AsyncFunction: yaml],
    },
    {
      ext: ".css",
    },
  ],
  src: [
    "/",
    "/_includes",
    "/_includes/variables.css",
    "/index.css",
    "/text.css",
  ],
}
`;

snapshot[`lightningcss plugin (bundle mode) 2`] = `[]`;

snapshot[`lightningcss plugin (bundle mode) 3`] = `
[
  {
    content: "/*! modern-normalize v2.0.0 | MIT License | https://github.com/sindresorhus/modern-normalize */
::root{--color:#333;--background:#fff;--font-family:sans-serif}*,:before,:after{box-sizing:border-box}html{-webkit-text-size-adjust:100%;tab-size:4;font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Noto Sans,Ubuntu,Cantarell,Helvetica Neue,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;line-height:1.15}body{margin:0}hr{height:0;color:inherit}abbr[title]{-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:ui-monospace,SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;font-size:1em}small{font-size:80%}sub,sup{vertical-align:baseline;font-size:75%;line-height:0;position:relative}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit}button,input,optgroup,select,textarea{margin:0;font-family:inherit;font-size:100%;line-height:1.15}button,select{text-transform:none}button{-webkit-appearance:button}[type=button]{-webkit-appearance:button}[type=reset]{-webkit-appearance:button}[type=submit]{-webkit-appearance:button}::-moz-focus-inner{border-style:none;padding:0}:-moz-focusring{outline:1px dotted buttontext}:-moz-ui-invalid{box-shadow:none}legend{padding:0}progress{vertical-align:baseline}::-webkit-inner-spin-button{height:auto}::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}.text{font-family:var(--font-family)}.text p{color:var(--color);box-shadow:0 0 .5em var(--background);backface-visibility:hidden}",
    data: {
      basename: "index",
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      url: "/index.css",
    },
    src: {
      ext: ".css",
      path: "/index",
      remote: undefined,
    },
  },
  {
    content: "/*! modern-normalize v2.0.0 | MIT License | https://github.com/sindresorhus/modern-normalize */
*,:before,:after{box-sizing:border-box}html{-webkit-text-size-adjust:100%;tab-size:4;font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Noto Sans,Ubuntu,Cantarell,Helvetica Neue,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;line-height:1.15}body{margin:0}hr{height:0;color:inherit}abbr[title]{-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:ui-monospace,SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;font-size:1em}small{font-size:80%}sub,sup{vertical-align:baseline;font-size:75%;line-height:0;position:relative}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit}button,input,optgroup,select,textarea{margin:0;font-family:inherit;font-size:100%;line-height:1.15}button,select{text-transform:none}button{-webkit-appearance:button}[type=button]{-webkit-appearance:button}[type=reset]{-webkit-appearance:button}[type=submit]{-webkit-appearance:button}::-moz-focus-inner{border-style:none;padding:0}:-moz-focusring{outline:1px dotted buttontext}:-moz-ui-invalid{box-shadow:none}legend{padding:0}progress{vertical-align:baseline}::-webkit-inner-spin-button{height:auto}::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}.text{font-family:var(--font-family)}.text p{color:var(--color);box-shadow:0 0 .5em var(--background);backface-visibility:hidden}",
    data: {
      basename: "text",
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      url: "/text.css",
    },
    src: {
      ext: ".css",
      path: "/text",
      remote: undefined,
    },
  },
]
`;
