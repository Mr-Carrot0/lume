export const snapshot = {};

snapshot[`redirects plugin 1`] = `
{
  formats: [
    {
      engines: 0,
      ext: ".page.toml",
      isPage: true,
      loader: [AsyncFunction: toml],
    },
    {
      engines: 1,
      ext: ".page.ts",
      isPage: true,
      loader: [AsyncFunction: module],
    },
    {
      engines: 1,
      ext: ".page.js",
      isPage: true,
      loader: [AsyncFunction: module],
    },
    {
      engines: 0,
      ext: ".page.jsonc",
      isPage: true,
      loader: [AsyncFunction: json],
    },
    {
      engines: 0,
      ext: ".page.json",
      isPage: true,
      loader: [AsyncFunction: json],
    },
    {
      dataLoader: [AsyncFunction: json],
      engines: 0,
      ext: ".json",
      loader: [AsyncFunction: json],
    },
    {
      dataLoader: [AsyncFunction: json],
      engines: 0,
      ext: ".jsonc",
      loader: [AsyncFunction: json],
    },
    {
      engines: 1,
      ext: ".md",
      isPage: true,
      loader: [AsyncFunction: text],
    },
    {
      engines: 1,
      ext: ".markdown",
      isPage: true,
      loader: [AsyncFunction: text],
    },
    {
      dataLoader: [AsyncFunction: module],
      engines: 1,
      ext: ".js",
      loader: [AsyncFunction: module],
    },
    {
      dataLoader: [AsyncFunction: module],
      engines: 1,
      ext: ".ts",
      loader: [AsyncFunction: module],
    },
    {
      engines: 1,
      ext: ".vento",
      isPage: true,
      loader: [AsyncFunction: text],
    },
    {
      engines: 1,
      ext: ".vto",
      isPage: true,
      loader: [AsyncFunction: text],
    },
    {
      dataLoader: [AsyncFunction: toml],
      engines: 0,
      ext: ".toml",
      loader: [AsyncFunction: toml],
    },
    {
      dataLoader: [AsyncFunction: yaml],
      engines: 0,
      ext: ".yaml",
      isPage: true,
      loader: [AsyncFunction: yaml],
    },
    {
      dataLoader: [AsyncFunction: yaml],
      engines: 0,
      ext: ".yml",
      isPage: true,
      loader: [AsyncFunction: yaml],
    },
  ],
  src: [
    "/",
    "/page1.vto",
    "/page2.vto",
  ],
}
`;

snapshot[`redirects plugin 2`] = `[]`;

snapshot[`redirects plugin 3`] = `
[
  {
    content: '<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>Redirecting…</title>
  <meta http-equiv="refresh" content="0; url=/page1/">
</head>
<body>
  <h1>Redirecting…</h1>
  <a href="/page1/">Click here if you are not redirected.</a>
</body>
</html>',
    data: {
      basename: "old-page1",
      content: '<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>Redirecting…</title>
  <meta http-equiv="refresh" content="0; url=/page1/">
</head>
<body>
  <h1>Redirecting…</h1>
  <a href="/page1/">Click here if you are not redirected.</a>
</body>
</html>',
      page: [
        "src",
        "data",
        "isCopy",
      ],
      unlisted: true,
      url: "/old-page1/",
    },
    src: {
      ext: "",
      path: "",
      remote: undefined,
    },
  },
  {
    content: '<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>Redirecting…</title>
  <meta http-equiv="refresh" content="0; url=/page2/">
</head>
<body>
  <h1>Redirecting…</h1>
  <a href="/page2/">Click here if you are not redirected.</a>
</body>
</html>',
    data: {
      basename: "old-page2",
      content: '<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>Redirecting…</title>
  <meta http-equiv="refresh" content="0; url=/page2/">
</head>
<body>
  <h1>Redirecting…</h1>
  <a href="/page2/">Click here if you are not redirected.</a>
</body>
</html>',
      page: [
        "src",
        "data",
        "isCopy",
      ],
      unlisted: true,
      url: "/old-page2/",
    },
    src: {
      ext: "",
      path: "",
      remote: undefined,
    },
  },
  {
    content: '<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>Redirecting…</title>
  <meta http-equiv="refresh" content="1; url=/page2/">
</head>
<body>
  <h1>Redirecting…</h1>
  <a href="/page2/">Click here if you are not redirected.</a>
</body>
</html>',
    data: {
      basename: "other-old-page2",
      content: '<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>Redirecting…</title>
  <meta http-equiv="refresh" content="1; url=/page2/">
</head>
<body>
  <h1>Redirecting…</h1>
  <a href="/page2/">Click here if you are not redirected.</a>
</body>
</html>',
      page: [
        "src",
        "data",
        "isCopy",
      ],
      unlisted: true,
      url: "/other-old-page2/",
    },
    src: {
      ext: "",
      path: "",
      remote: undefined,
    },
  },
  {
    content: "Page 1",
    data: {
      basename: "page1",
      children: "Page 1",
      content: "Page 1",
      date: [],
      mergedKeys: [
        "tags",
      ],
      oldUrl: "/old-page1/",
      page: [
        "src",
        "data",
        "isCopy",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      url: "/page1/",
    },
    src: {
      ext: ".vto",
      path: "/page1",
      remote: undefined,
    },
  },
  {
    content: "Page 2
",
    data: {
      basename: "page2",
      children: "Page 2
",
      content: "Page 2
",
      date: [],
      mergedKeys: [
        "tags",
      ],
      oldUrl: "Array(2)",
      page: [
        "src",
        "data",
        "isCopy",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      url: "/page2/",
    },
    src: {
      ext: ".vto",
      path: "/page2",
      remote: undefined,
    },
  },
]
`;

snapshot[`redirects plugin for netlify 1`] = `
{
  formats: [
    {
      engines: 0,
      ext: ".page.toml",
      isPage: true,
      loader: [AsyncFunction: toml],
    },
    {
      engines: 1,
      ext: ".page.ts",
      isPage: true,
      loader: [AsyncFunction: module],
    },
    {
      engines: 1,
      ext: ".page.js",
      isPage: true,
      loader: [AsyncFunction: module],
    },
    {
      engines: 0,
      ext: ".page.jsonc",
      isPage: true,
      loader: [AsyncFunction: json],
    },
    {
      engines: 0,
      ext: ".page.json",
      isPage: true,
      loader: [AsyncFunction: json],
    },
    {
      dataLoader: [AsyncFunction: json],
      engines: 0,
      ext: ".json",
      loader: [AsyncFunction: json],
    },
    {
      dataLoader: [AsyncFunction: json],
      engines: 0,
      ext: ".jsonc",
      loader: [AsyncFunction: json],
    },
    {
      engines: 1,
      ext: ".md",
      isPage: true,
      loader: [AsyncFunction: text],
    },
    {
      engines: 1,
      ext: ".markdown",
      isPage: true,
      loader: [AsyncFunction: text],
    },
    {
      dataLoader: [AsyncFunction: module],
      engines: 1,
      ext: ".js",
      loader: [AsyncFunction: module],
    },
    {
      dataLoader: [AsyncFunction: module],
      engines: 1,
      ext: ".ts",
      loader: [AsyncFunction: module],
    },
    {
      engines: 1,
      ext: ".vento",
      isPage: true,
      loader: [AsyncFunction: text],
    },
    {
      engines: 1,
      ext: ".vto",
      isPage: true,
      loader: [AsyncFunction: text],
    },
    {
      dataLoader: [AsyncFunction: toml],
      engines: 0,
      ext: ".toml",
      loader: [AsyncFunction: toml],
    },
    {
      dataLoader: [AsyncFunction: yaml],
      engines: 0,
      ext: ".yaml",
      isPage: true,
      loader: [AsyncFunction: yaml],
    },
    {
      dataLoader: [AsyncFunction: yaml],
      engines: 0,
      ext: ".yml",
      isPage: true,
      loader: [AsyncFunction: yaml],
    },
  ],
  src: [
    "/",
    "/page1.vto",
    "/page2.vto",
  ],
}
`;

snapshot[`redirects plugin for netlify 2`] = `[]`;

snapshot[`redirects plugin for netlify 3`] = `
[
  {
    content: "/old-page1/ /page1/ 301
/old-page2/ /page2/ 301
/other-old-page2/ /page2/ 307",
    data: {
      basename: "_redirects",
      page: [
        "src",
        "data",
        "isCopy",
      ],
      url: "/_redirects",
    },
    src: {
      ext: "",
      path: "",
      remote: undefined,
    },
  },
  {
    content: "Page 1",
    data: {
      basename: "page1",
      children: "Page 1",
      content: "Page 1",
      date: [],
      mergedKeys: [
        "tags",
      ],
      oldUrl: "/old-page1/",
      page: [
        "src",
        "data",
        "isCopy",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      url: "/page1/",
    },
    src: {
      ext: ".vto",
      path: "/page1",
      remote: undefined,
    },
  },
  {
    content: "Page 2
",
    data: {
      basename: "page2",
      children: "Page 2
",
      content: "Page 2
",
      date: [],
      mergedKeys: [
        "tags",
      ],
      oldUrl: "Array(2)",
      page: [
        "src",
        "data",
        "isCopy",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      url: "/page2/",
    },
    src: {
      ext: ".vto",
      path: "/page2",
      remote: undefined,
    },
  },
]
`;

snapshot[`redirects plugin for vercel 1`] = `
{
  formats: [
    {
      engines: 0,
      ext: ".page.toml",
      isPage: true,
      loader: [AsyncFunction: toml],
    },
    {
      engines: 1,
      ext: ".page.ts",
      isPage: true,
      loader: [AsyncFunction: module],
    },
    {
      engines: 1,
      ext: ".page.js",
      isPage: true,
      loader: [AsyncFunction: module],
    },
    {
      engines: 0,
      ext: ".page.jsonc",
      isPage: true,
      loader: [AsyncFunction: json],
    },
    {
      engines: 0,
      ext: ".page.json",
      isPage: true,
      loader: [AsyncFunction: json],
    },
    {
      dataLoader: [AsyncFunction: json],
      engines: 0,
      ext: ".json",
      loader: [AsyncFunction: json],
    },
    {
      dataLoader: [AsyncFunction: json],
      engines: 0,
      ext: ".jsonc",
      loader: [AsyncFunction: json],
    },
    {
      engines: 1,
      ext: ".md",
      isPage: true,
      loader: [AsyncFunction: text],
    },
    {
      engines: 1,
      ext: ".markdown",
      isPage: true,
      loader: [AsyncFunction: text],
    },
    {
      dataLoader: [AsyncFunction: module],
      engines: 1,
      ext: ".js",
      loader: [AsyncFunction: module],
    },
    {
      dataLoader: [AsyncFunction: module],
      engines: 1,
      ext: ".ts",
      loader: [AsyncFunction: module],
    },
    {
      engines: 1,
      ext: ".vento",
      isPage: true,
      loader: [AsyncFunction: text],
    },
    {
      engines: 1,
      ext: ".vto",
      isPage: true,
      loader: [AsyncFunction: text],
    },
    {
      dataLoader: [AsyncFunction: toml],
      engines: 0,
      ext: ".toml",
      loader: [AsyncFunction: toml],
    },
    {
      dataLoader: [AsyncFunction: yaml],
      engines: 0,
      ext: ".yaml",
      isPage: true,
      loader: [AsyncFunction: yaml],
    },
    {
      dataLoader: [AsyncFunction: yaml],
      engines: 0,
      ext: ".yml",
      isPage: true,
      loader: [AsyncFunction: yaml],
    },
  ],
  src: [
    "/",
    "/page1.vto",
    "/page2.vto",
  ],
}
`;

snapshot[`redirects plugin for vercel 2`] = `[]`;

snapshot[`redirects plugin for vercel 3`] = `
[
  {
    content: "Page 1",
    data: {
      basename: "page1",
      children: "Page 1",
      content: "Page 1",
      date: [],
      mergedKeys: [
        "tags",
      ],
      oldUrl: "/old-page1/",
      page: [
        "src",
        "data",
        "isCopy",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      url: "/page1/",
    },
    src: {
      ext: ".vto",
      path: "/page1",
      remote: undefined,
    },
  },
  {
    content: "Page 2
",
    data: {
      basename: "page2",
      children: "Page 2
",
      content: "Page 2
",
      date: [],
      mergedKeys: [
        "tags",
      ],
      oldUrl: "Array(2)",
      page: [
        "src",
        "data",
        "isCopy",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      url: "/page2/",
    },
    src: {
      ext: ".vto",
      path: "/page2",
      remote: undefined,
    },
  },
  {
    content: '{
  "redirects": [
    {
      "source": "/old-page1/",
      "destination": "/page1/",
      "statusCode": 301
    },
    {
      "source": "/old-page2/",
      "destination": "/page2/",
      "statusCode": 301
    },
    {
      "source": "/other-old-page2/",
      "destination": "/page2/",
      "statusCode": 307
    }
  ]
}',
    data: {
      basename: "vercel",
      page: [
        "src",
        "data",
        "isCopy",
      ],
      url: "/vercel.json",
    },
    src: {
      ext: "",
      path: "",
      remote: undefined,
    },
  },
]
`;

snapshot[`redirects plugin for json 1`] = `
{
  formats: [
    {
      engines: 0,
      ext: ".page.toml",
      isPage: true,
      loader: [AsyncFunction: toml],
    },
    {
      engines: 1,
      ext: ".page.ts",
      isPage: true,
      loader: [AsyncFunction: module],
    },
    {
      engines: 1,
      ext: ".page.js",
      isPage: true,
      loader: [AsyncFunction: module],
    },
    {
      engines: 0,
      ext: ".page.jsonc",
      isPage: true,
      loader: [AsyncFunction: json],
    },
    {
      engines: 0,
      ext: ".page.json",
      isPage: true,
      loader: [AsyncFunction: json],
    },
    {
      dataLoader: [AsyncFunction: json],
      engines: 0,
      ext: ".json",
      loader: [AsyncFunction: json],
    },
    {
      dataLoader: [AsyncFunction: json],
      engines: 0,
      ext: ".jsonc",
      loader: [AsyncFunction: json],
    },
    {
      engines: 1,
      ext: ".md",
      isPage: true,
      loader: [AsyncFunction: text],
    },
    {
      engines: 1,
      ext: ".markdown",
      isPage: true,
      loader: [AsyncFunction: text],
    },
    {
      dataLoader: [AsyncFunction: module],
      engines: 1,
      ext: ".js",
      loader: [AsyncFunction: module],
    },
    {
      dataLoader: [AsyncFunction: module],
      engines: 1,
      ext: ".ts",
      loader: [AsyncFunction: module],
    },
    {
      engines: 1,
      ext: ".vento",
      isPage: true,
      loader: [AsyncFunction: text],
    },
    {
      engines: 1,
      ext: ".vto",
      isPage: true,
      loader: [AsyncFunction: text],
    },
    {
      dataLoader: [AsyncFunction: toml],
      engines: 0,
      ext: ".toml",
      loader: [AsyncFunction: toml],
    },
    {
      dataLoader: [AsyncFunction: yaml],
      engines: 0,
      ext: ".yaml",
      isPage: true,
      loader: [AsyncFunction: yaml],
    },
    {
      dataLoader: [AsyncFunction: yaml],
      engines: 0,
      ext: ".yml",
      isPage: true,
      loader: [AsyncFunction: yaml],
    },
  ],
  src: [
    "/",
    "/page1.vto",
    "/page2.vto",
  ],
}
`;

snapshot[`redirects plugin for json 2`] = `[]`;

snapshot[`redirects plugin for json 3`] = `
[
  {
    content: '{
  "/old-page1/": "/page1/",
  "/old-page2/": "/page2/",
  "/other-old-page2/": {
    "to": "/page2/",
    "code": 307
  }
}',
    data: {
      basename: "_redirects",
      content: '{
  "/old-page1/": "/page1/",
  "/old-page2/": "/page2/",
  "/other-old-page2/": {
    "to": "/page2/",
    "code": 307
  }
}',
      page: [
        "src",
        "data",
        "isCopy",
      ],
      url: "_redirects.json",
    },
    src: {
      ext: "",
      path: "",
      remote: undefined,
    },
  },
  {
    content: "Page 1",
    data: {
      basename: "page1",
      children: "Page 1",
      content: "Page 1",
      date: [],
      mergedKeys: [
        "tags",
      ],
      oldUrl: "/old-page1/",
      page: [
        "src",
        "data",
        "isCopy",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      url: "/page1/",
    },
    src: {
      ext: ".vto",
      path: "/page1",
      remote: undefined,
    },
  },
  {
    content: "Page 2
",
    data: {
      basename: "page2",
      children: "Page 2
",
      content: "Page 2
",
      date: [],
      mergedKeys: [
        "tags",
      ],
      oldUrl: "Array(2)",
      page: [
        "src",
        "data",
        "isCopy",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      url: "/page2/",
    },
    src: {
      ext: ".vto",
      path: "/page2",
      remote: undefined,
    },
  },
]
`;
